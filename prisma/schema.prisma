generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  trips               Trip[]
  travelBuddyRequests TravelBuddyRequest[]
  userProfile         UserProfile?

  @@map("users")
}

model UserProfile {
  id            String   @id @default(uuid())
  userId        String   @unique
  contactNumber String
  age           Int
  image         String?
  bio           String?
  address       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("userProfiles")
}

model Trip {
  id          String   @id @default(uuid())
  userId      String
  destination String
  description String
  startDate   String
  endDate     String
  travelType  String
  photos      String[]
  budget      Int
  activities  String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  travelBuddyRequests TravelBuddyRequest[]

  user User @relation(fields: [userId], references: [id])

  @@map("trips")
}

model TravelBuddyRequest {
  id        String             @id @default(uuid())
  tripId    String
  userId    String
  status    BuddyRequestStatus
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt

  trip Trip @relation(fields: [tripId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("travelBuddyRequests")
}

enum BuddyRequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum UserRole {
  ADMIN
  USER
}
